<script type="application/json">
  {
    "pages": [
      "home/home",
      "order/myOrder",
      "publish/myPublish",
      "mine/mine"
    ],
    "packages": [
      "home/index",
      "mine/index",
      "order/index",
      "personalInfo/index",
      "product/index",
      "publish/index",
      "seller/index",
      "valuation/index"
    ],
    "window": {
      "backgroundTextStyle": "light",
      "navigationBarBackgroundColor": "#FEC806",
      "navigationBarTitleText": "野趣小圈",
      "navigationBarTextStyle": "black"
    },
    "usingComponents": {
      "van-tabbar": "vant-weapp/dist/tabbar/index",
      "van-tabbar-item": "vant-weapp/dist/tabbar-item/index"
    },
    "tabBar": {
      "custom": true,
      "list": [
        {
          "pagePath": "home/home",
          "text": "首页"
        },
        {
          "pagePath": "publish/myPublish",
          "text": "发布"
        },
        {
          "pagePath": "order/myOrder",
          "text": "订单"
        },
        {
          "pagePath": "mine/mine",
          "text": "我的"
        }
      ]
    },
    "permission": {
      "scope.userLocation": {
        "desc": "您的位置信息将用于给您推荐附近的趣导"
      }
    }
  }
</script>

<script>
    import mpx from '@mpxjs/core'
    import apiProxy from '@mpxjs/api-proxy'
    import {createApp} from '@mpxjs/core'
    import store from './components/store'
    /*only dev start*/
    // import './mock'
    /*only dev end*/

    mpx.use(apiProxy, {usePromise: true});

    createApp({
        globalData: {
            basePath: "http://127.0.0.1:8443"
        },
        onLaunch() {  // 如果用onShow的话，上传图片时会被触发一次
            store.state.systemInfo = wx.getSystemInfoSync();
            this.loginWx();
        },
        loginWx() {     // 登录
            store.state.isLogin = false;
            store.commit("change");

            wx.login({
                success: res => {
                    this.loginServer(res);
                }
            })
        },
        loginServer(res){
            wx.request({
                method: 'POST',
                url: this.globalData.basePath + "/login",
                header: {
                    "content-type": 'application/x-www-form-urlencoded'
                },
                data: {
                    code: res.code
                },
                success: (res) => {
                    wx.removeStorageSync('sessionId');
                    wx.setStorageSync("sessionId", res.header && res.header["Set-Cookie"]);
                    res = res.data;
                    if(res.code != 0){
                        return;
                    }
                    store.state.customerInfo = res.data;
                    store.commit("change");
                    this.locationAuth();
                }
            });
        },
        locationAuth() {
            wx.getSetting({
                success: (res) => {
                    // 先判断是否已经授过权
                    if (res.authSetting['scope.userLocation']) {
                        this.getLocation();
                    } else {
                        wx.authorize({
                            scope: 'scope.userLocation',
                            success: () => {
                                this.getLocation();
                            },
                            fail: () => {
                                store.state.isLogin = true;
                                store.state.location = {};
                                store.commit("change");
                            }
                        })
                    }
                }
            })
        },
        getLocation() {
            wx.getLocation({
                type: 'wgs84',
                success: (res) => {
                    store.state.isLogin = true;
                    store.state.location = res;
                    store.commit("change");
                },
                fail: () => {
                    store.state.isLogin = true;
                    store.state.location = {};
                    store.commit("change");
                }
            })
        },
        userInfoAuth() {
            wx.getSetting({
                success: (res) => {
                    // 已授权
                    if (res.authSetting['scope.userInfo']) {
                        wx.getUserInfo({
                            success: (res) => {
                                this.getUserInfo({detail: res});
                            }
                        })
                    }
                }
            })
        },
        getUserInfo(res) {
            console.log(res);
            store.state.userInfo = res.detail.userInfo;
            store.commit('change');
            this.initCustomer();
        },
        initCustomer() {
            let customerInfo = store.state.customerInfo;
            let userInfo = store.state.userInfo;
            // 初始化过了
            if(customerInfo.avatar){
                return;
            }
            wx.request({
                method: 'PUT',
                url: `${this.globalData.basePath}/weapp/customer/init?nickName=${userInfo.nickName}`,
                header: {
                    'Cookie': wx.getStorageSync("sessionId")
                },
                data: userInfo.avatarUrl,
                success: (res) => {
                    res = res.data;
                    if (res.code == 0) {
                        store.state.customerInfo.avatar = store.state.userInfo.avatarUrl;
                        store.state.customerInfo.nickname = store.state.userInfo.nickName;
                        store.state.customerInfo = Object.assign({}, store.state.customerInfo)
                        store.commit("change");
                    } else if (res.code == 401) {
                        app.loginWx();
                    }
                }
            });
        },
        getMobileFromWx(e) {
            console.log(e.detail.errMsg);
            if (e.detail.iv) {
                this.getMobileFromServer(e.detail.iv, e.detail.encryptedData);
            }
        },
        getMobileFromServer(iv, encryptedData) {
            wx.request({
                method: 'PUT',
                url: `${this.globalData.basePath}/weapp/customer/mobile`,
                header: {
                    'Cookie': wx.getStorageSync("sessionId")
                },
                data: {
                    iv, encryptedData
                },
                success: (res) => {
                    res = res.data;
                    if (res.code == 0) {
                        store.state.customerInfo.mobile = this.data;
                        store.state.customerInfo = Object.assign({}, store.state.customerInfo)
                        store.commit("change");
                    } else if (res.code == 401) {
                        app.loginWx();
                    }
                }
            });
        }
    })
</script>
<style src="../node_modules/weui-miniprogram/miniprogram_dist/weui-wxss/dist/style/weui.wxss"></style>
<style lang="less">
  @import "assets/iconfont.css";

  page {
    font-size: 16px;
    line-height: 22px;
  }

  /* 通用样式 */
  .text-overflow {
    width: 100%;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  .clearfix:after {
    display: block;
    clear: both;
    content: "";
    visibility: hidden;
    height: 0;
  }

  .clearfix {
    zoom: 1;
  }

  .empty-data{
    width: ~"600rpx";
    height: ~"618rpx";
    margin: 0 auto;
    background: url("./assets/empty-data.png");
    background-size: 100% 100%;
  }
  .empty-order{
    width: ~"600rpx";
    height: ~"618rpx";
    margin: 0 auto;
    background: url("./assets/empty-order.png");
    background-size: 100% 100%;
  }
  .empty-message{
    width: ~"600rpx";
    height: ~"618rpx";
    margin: 0 auto;
    background: url("./assets/empty-message.png");
    background-size: 100% 100%;
  }

  /* vant weapp 定制 */
  .card-item {
    margin-bottom: 2vw;
  }

  button.card-btn {
    margin-left: 2vw;
  }

  button.submit-btn {
    width: 90%;
    margin-left: 5%;
    background: linear-gradient(to right, #FFD000, #FFBD00);
    border-radius: 10px;
    position: absolute;
    bottom: 40px;
  }
</style>
