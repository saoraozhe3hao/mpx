<script type="application/json">
  {
    "usingComponents": {
      "van-card": "vant-weapp/dist/card/index",
      "van-button": "vant-weapp/dist/button/index",
      "van-rate": "vant-weapp/dist/rate/index",
      "van-cell-group": "vant-weapp/dist/cell-group/index",
      "mp-loading": "weui-miniprogram/miniprogram_dist/loading/loading",
      "van-toast": "vant-weapp/dist/toast/index"
    }
  }
</script>

<template>
  <van-cell-group title="我收藏的趣导">
    <van-card wx:for="{{merchants}}" wx:key="index" lazy-load="true" currency=" " custom-class="card-item"
              tag="{{item.product.tags}}" title="{{ item.nickName }}" desc="{{item.product.title}}"
              price="{{'距您'+item.product.distance+'公里'}}" bindtap="merchantDetail(item)"
              thumb="{{'http://yqxq.oss-cn-hangzhou.aliyuncs.com/'+item.product.coverPhoto}}">
      <view slot="bottom">
        <van-rate value="{{ item.rate }}" readonly allow-half="true"/>
      </view>
      <view slot="footer">
        <van-button size="mini" icon="like-o" catch:tap="remove(item)">移除</van-button>
      </view>
    </van-card>
  </van-cell-group>
  <view class="empty-data" wx:if="{{!merchants.length && !requesting}}"></view>
  <mp-loading type="circle" show="{{hasNext || requesting}}" class="loading" wx:ref="loading"></mp-loading>
  <van-toast id="van-toast"/>
</template>

<script>
    import {createPage} from '@mpxjs/core'
    import store from '../components/store'
    import Toast from 'vant-weapp/dist/toast/toast'

    let app = getApp();
    createPage({
        data: {
            pageNum: 1,
            hasNext: false,
            requesting: false,  // 是否正在请求
            merchants: []
        },
        onLoad(options) {
            wx.showShareMenu();
            wx.setNavigationBarTitle({
                title: '我的收藏'
            });
            // 这里只是定义查询规则，后面的 exec() 才真正查询
            this.query = this.createSelectorQuery();
            this.query.select('.loading').boundingClientRect();

            this.fetchMerchants();
        },
        computed: {
            location() {
                return store.state.location;
            }
        },
        onPageScroll() {
            // 正在查询元素，正在请求数据，没有更多数据
            if (this.requesting || !this.hasNext) {
                return;
            }
            this.query.exec((res) => {
                if (!this.requesting && res[0].top < store.state.systemInfo.windowHeight - 50) {
                    this.pageNum++;
                    this.fetchMerchants();
                }
            })
        },
        fetchMerchants() {
            this.requesting = true;
            wx.request({
                method: 'POST',
                url: `${app.globalData.basePath}/weapp/merchant/collection`,
                header: {
                    'Cookie': wx.getStorageSync("sessionId")
                },
                data: {
                    pageNum: this.pageNum,
                    pageSize: 10,
                    longitude: this.location.longitude || null,
                    latitude: this.location.latitude || null
                },
                success: (res) => {
                    res = res.data;
                    if (res.code == 0) {
                        this.merchants = this.merchants.concat(res.data.list);
                        this.hasNext = res.data.hasNextPage;
                        this.requesting = false;
                        setTimeout(()=>{
                            this.onPageScroll();  // 怕没滚动时，加载图标就出现了，主动触发一次滚动响应
                        },0);
                    } else if (res.code == 401) {
                        app.loginWx();
                    }
                },
                complete: () => {
                    this.requesting = false;
                }
            });
        },
        remove(item) {
            Toast.loading({
                forbidClick: true,
                duration: 0
            });
            wx.request({
                method: 'DELETE',
                url: `${app.globalData.basePath}/weapp/merchant/collection/${item.id}`,
                header: {
                    'Cookie': wx.getStorageSync("sessionId")
                },
                success: (res) => {
                    res = res.data;
                    if (res.code == 0) {
                        this.pageNum = 1;
                        this.merchants = [];
                        this.fetchMerchants();
                    } else if (res.code == 401) {
                        app.loginWx();
                    }
                },
                complete(res) {
                    Toast.clear();
                }
            });
        },
        merchantDetail(item) {
            wx.navigateTo({
                url: `/sellerDetail?id=${item.id}`
            })
        }
    })
</script>

<style lang="less">

</style>
